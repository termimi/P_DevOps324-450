name: Production Deployment

on:
  workflow_dispatch:

jobs:
  audit-linting:
    name: Install Audit and Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Backend Install-Dependencies
        run: |
          cd app/backend
          npm install

      - name: Frontend Install-Dependencies
        run: |
          cd app/frontend
          npm install

      - name: Backend Setup-Lint
        run: |
          cd app/backend
          npm run lint

      - name: Frontend Setup-Lint
        run: |
          cd app/frontend
          npm run lint
      
      - name: Backend Setup-Audit
        run: |
          cd app/backend
          if npm audit; then
            echo "Pas de vulnérabilité détecté"
          else
            echo "Vulnérabilité détecté, en cours de fixation"
            npm audit fix
            fi
          

      - name: Frontend Setup-Audit
        run: |
          cd app/frontend
          if npm audit; then
            echo "Pas de vulnérabilité détecté"
          else
            echo "Vulnérabilité détecté, en cours de fixation"
            npm audit fix
            fi

  build-backend:
    name: Backend image push on dockerhub
    runs-on: ubuntu-latest
    needs:
      - audit-linting
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        id: docker-hub
        env:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          docker login -u $username -p $password
          echo "username=$username" >> $GITHUB_ENV

      - name: Build Backend Image
        id: build-docker-images
        run: |
          docker build app/backend -f app/backend/dockerfile -t backend-todo

      - name: Tag Backend Image
        id: tag-docker-images
        run: |
          docker tag backend-todo $username/backend-todo:latest

      - name: Push Backend Image
        id: push-docker-images
        run: |
          docker push $username/backend-todo:latest

  build-frontend:
    name: Frontend image push on dockerhub
    runs-on: ubuntu-latest
    needs:
      - audit-linting
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        id: docker-hub
        env:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          docker login -u $username -p $password
          echo "username=$username" >> $GITHUB_ENV

      - name: Build Frontend Image
        id: build-docker-images
        run: |
          docker build app/frontend -f app/frontend/Dockerfile -t frontend-todo

      - name: Tag Frontend Image
        id: tag-docker-images
        run: |
          docker tag frontend-todo $username/frontend-todo:latest

      - name: Push Frontend Image
        id: push-docker-images
        run: |
          docker push $username/frontend-todo:latest

  validate-containers-app:
    name: Validation of the containers app (Frontend and Backend)
    runs-on: ubuntu-latest
    needs:
      - build-backend
      - build-frontend
    steps:
      - uses: actions/checkout@v4

      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Docker compose up
        run: |
          docker-compose -f app/docker-compose.yml up -d

      - name: Verify the containers of the app
        run: |
          sleep 30
          docker ps
          curl -f http://localhost:4173

      - name: Close containers
        run: |
          docker-compose -f app/docker-compose.yml stop
